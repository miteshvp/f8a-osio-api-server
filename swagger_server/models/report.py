# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Report(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, cve: List[str]=None, license: List[str]=None):
        """
        Report - a model defined in Swagger

        :param cve: The cve of this Report.
        :type cve: List[str]
        :param license: The license of this Report.
        :type license: List[str]
        """
        self.swagger_types = {
            'cve': List[str],
            'license': List[str]
        }

        self.attribute_map = {
            'cve': 'cve',
            'license': 'license'
        }

        self._cve = cve
        self._license = license

    @classmethod
    def from_dict(cls, dikt) -> 'Report':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Report of this Report.
        :rtype: Report
        """
        return deserialize_model(dikt, cls)

    @property
    def cve(self) -> List[str]:
        """
        Gets the cve of this Report.

        :return: The cve of this Report.
        :rtype: List[str]
        """
        return self._cve

    @cve.setter
    def cve(self, cve: List[str]):
        """
        Sets the cve of this Report.

        :param cve: The cve of this Report.
        :type cve: List[str]
        """

        self._cve = cve

    @property
    def license(self) -> List[str]:
        """
        Gets the license of this Report.

        :return: The license of this Report.
        :rtype: List[str]
        """
        return self._license

    @license.setter
    def license(self, license: List[str]):
        """
        Sets the license of this Report.

        :param license: The license of this Report.
        :type license: List[str]
        """

        self._license = license

